plugins {
	id 'org.springframework.boot' version '2.2.6.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
}

group = 'com.tucklets'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

// Add source set for integration tests.
sourceSets {
	integrationTest {
		java {
			compileClasspath += main.output + test.output
			runtimeClasspath += main.output + test.output
			srcDir file('src/integrationTests/java')
		}
		resources.srcDir file('src/integrationTests/resources')
	}
}

configurations {
	integrationTestCompile.extendsFrom testCompile
	integrationTestRuntime.extendsFrom testRuntime
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.security:spring-security-test'

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}

	compile group: 'org.postgresql', name: 'postgresql', version: '42.2.11'
	compile group: 'org.apache.poi', name: 'poi', version: '4.1.2'
	compile group: 'org.apache.poi', name: 'poi-ooxml', version: '4.1.2'
	compile group: 'org.apache.commons', name: 'commons-text', version: '1.8'
	compile group: 'com.google.zxing', name: 'core', version: '3.4.0'
	compile group: 'com.google.zxing', name: 'javase', version: '3.4.0'
	compile group: 'com.itextpdf', name: 'itext7-core', version: '7.1.10', ext: 'pom'
	compile group: 'com.itextpdf', name: 'pdfa', version: '7.1.10'
	compile group: 'com.itextpdf', name: 'layout', version: '7.1.10'
	compile group: 'com.amazonaws', name: 'aws-java-sdk', version: '1.11.762'
	compile group: 'commons-io', name: 'commons-io', version: '2.6'
	compile group: 'com.google.code.gson', name: 'gson', version: '2.8.6'
	// Integration with AWS Secrets Manager
	compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-aws-secrets-manager-config', version: '2.2.5.RELEASE'

	// Integration Test
	integrationTestCompile 'org.assertj:assertj-core:3.18.1'
	integrationTestCompile 'org.springframework.boot:spring-boot-starter-test'



}

test {
	useJUnitPlatform()
}

task integrationTest(type: Test) {
	description = 'Runs the integration tests.'
	group = 'verification'
	testClassesDirs = sourceSets.integrationTest.output.classesDirs
	classpath = sourceSets.integrationTest.runtimeClasspath

	shouldRunAfter test

	useJUnitPlatform()
}


clean.doFirst {
	delete "${rootDir}/frontend/node_modules/"
	delete "${rootDir}/frontend/dist"
	println "Removed node_modules and dist sources."
}

// Add webpack step to bootRun + bootJar
bootRun.dependsOn('frontend:webpack')

bootJar {
	from('frontend/dist') {
		into 'frontend/dist'
	}
	// Include images from frontend/static folder.
	from('frontend/static/img') {
		into 'frontend/static/img'
	}
}

// Add integration test to task :check
check.dependsOn integrationTest

processResources.dependsOn('frontend:webpack')
